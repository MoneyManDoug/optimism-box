"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.waffleV2 = exports.MockProvider = void 0;
const ethers_v4_1 = require("ethers-v4");
const ethereum_waffle_v2_1 = require("ethereum-waffle-v2");
const ganache_1 = require("../ganache");
class MockProvider extends ethers_v4_1.providers.Web3Provider {
    constructor(options) {
        super(ganache_1.ganache.provider(Object.assign({ gasPrice: 0, accounts: ethereum_waffle_v2_1.defaultAccounts }, options)));
        this.options = options;
    }
    getWallets() {
        var _a, _b;
        const items = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.accounts) !== null && _b !== void 0 ? _b : ethereum_waffle_v2_1.defaultAccounts;
        return items.map((x) => new ethers_v4_1.Wallet(x.secretKey, this));
    }
    async rpc(method, params = []) {
        return new Promise((resolve, reject) => {
            if (!!this._web3Provider) {
                this._web3Provider.sendAsync({
                    jsonrpc: '2.0',
                    method,
                    params,
                }, (err, res) => {
                    if (err) {
                        reject(err);
                    }
                    else {
                        resolve(res.result);
                    }
                });
            }
            else {
                reject('web3Provider not defined');
            }
        });
    }
}
exports.MockProvider = MockProvider;
exports.waffleV2 = {
    MockProvider,
};
//# sourceMappingURL=waffle-v2.js.map