"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BN = require('bn.js');
const config_1 = require("@nomiclabs/buidler/config");
const ovm_1 = require("../utils/ovm");
config_1.extendEnvironment(async (bre) => {
    const config = bre.config;
    config.startOvmNode = async () => {
        const ovmGasLimit = config.ovmGasLimit || 100000000;
        await bre.network.provider['_init']();
        const node = bre.network.provider['_node'];
        const vm = node['_vm'];
        const ovm = ovm_1.makeOVM({
            evmOpts: Object.assign(Object.assign({}, vm.opts), { stateManager: vm.stateManager }),
            ovmOpts: {
                emGasLimit: ovmGasLimit,
            },
        });
        await ovm.init();
        node['_vm'] = ovm;
        node.estimateGas = async () => {
            return {
                estimation: new BN(ovmGasLimit),
            };
        };
        const vmTracer = node['_vmTracer'];
        vmTracer['_vm'] = ovm;
        vmTracer.enableTracing();
    };
});
//# sourceMappingURL=buidler-ovm-node.js.map