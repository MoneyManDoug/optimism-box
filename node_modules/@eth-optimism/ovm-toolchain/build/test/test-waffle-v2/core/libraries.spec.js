"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
require("../../common/setup");
const ethereum_waffle_v2_1 = require("ethereum-waffle-v2");
const waffle_v2_1 = require("../../../src/waffle/waffle-v2");
const SimpleSafeMathJSON = __importStar(require("../../temp/build/waffle/SimpleSafeMath.json"));
const SimpleUnsafeMathJSON = __importStar(require("../../temp/build/waffle/SimpleUnsafeMath.json"));
const SafeMathUserJSON = __importStar(require("../../temp/build/waffle/SafeMathUser.json"));
const CONTRACT_PATH_PREFIX = 'test/common/contracts/libraries/';
describe('Library Support', () => {
    let provider;
    let wallet;
    before(async () => {
        provider = new waffle_v2_1.waffleV2.MockProvider();
        [wallet] = provider.getWallets();
    });
    let deployedLibUser;
    before(async () => {
        const deployedSafeMath = await ethereum_waffle_v2_1.deployContract(wallet, SimpleSafeMathJSON, []);
        ethereum_waffle_v2_1.link(SafeMathUserJSON, CONTRACT_PATH_PREFIX + 'SimpleSafeMath.sol:SimpleSafeMath', deployedSafeMath.address);
        const deployedUnsafeMath = await ethereum_waffle_v2_1.deployContract(wallet, SimpleUnsafeMathJSON, []);
        ethereum_waffle_v2_1.link(SafeMathUserJSON, CONTRACT_PATH_PREFIX + 'SimpleUnsafeMath.sol:SimpleUnsafeMath', deployedUnsafeMath.address);
        deployedLibUser = await ethereum_waffle_v2_1.deployContract(wallet, SafeMathUserJSON, []);
    });
    it('should allow us to transpile, link, and query contract methods which use a single library', async () => {
        const returnedUsingLib = await deployedLibUser.useLib();
        returnedUsingLib._hex.should.equal('0x05');
    }).timeout(20000);
    it('should allow us to transpile, link, and query contract methods which use a multiple libraries', async () => {
        const returnedUsingLib = await deployedLibUser.use2Libs();
        returnedUsingLib._hex.should.equal('0x06');
    }).timeout(20000);
});
//# sourceMappingURL=libraries.spec.js.map