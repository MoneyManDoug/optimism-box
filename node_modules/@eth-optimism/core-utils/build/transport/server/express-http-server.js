"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpressHttpServer = void 0;
const bodyParser = require("body-parser");
class ExpressHttpServer {
    constructor(port, hostname, middleware) {
        this.port = port;
        this.hostname = hostname;
        this.listening = false;
        const express = require('express');
        this.app = express();
        this.app.use(bodyParser.json({ limit: '50mb' }));
        if (typeof middleware !== 'undefined') {
            for (const m of middleware) {
                this.app.use(m());
            }
        }
        this.initRoutes();
    }
    initRoutes() {
        return;
    }
    async listen() {
        if (this.listening) {
            return;
        }
        return new Promise((resolve, reject) => {
            this.server = this.app.listen(this.port, this.hostname, () => {
                this.listening = true;
                resolve();
            });
        });
    }
    async close() {
        if (!this.listening) {
            return;
        }
        await this.server.close();
        this.listening = false;
    }
}
exports.ExpressHttpServer = ExpressHttpServer;
//# sourceMappingURL=express-http-server.js.map